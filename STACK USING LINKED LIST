#include <iostream>
using namespace std;

template <typename T>
class Node {
	public : 
		T data;
		Node<T> *next;

		Node(T data) {
			this -> data = data;
			next = NULL;
		}

		~Node() {
			delete next;
		}
};


class Stack {
    
	   Node *head;
      int size;
      
      public:
      Stack() {
       head=NULL;
       size=0;
    }

	/*----------------- Public Functions of Stack -----------------*/

    int getSize() {
      return size;
    }

    bool isEmpty() {
        if(head==NULL){
            return true;
           }
        return false;
    }

    void push(int element) {
      Node *newnode=new Node(element);
        if(head==NULL){
         head=newnode;
            size++;
        }
        else{
            newnode->next=head;
            head=newnode;
            size++;
        }
    }

    int pop() {
       int ans=head->data;
        head=head->next;
        size--;
        return ans;
    }

    int top() {
        if(head==NULL){
            return -1;
        }
        return head->data;
    }

};
